    The program will accept command line arguments to get the information from the user. That is, its main() function should be of the form "int main(int argc, char *argv[])...." 
    The program can be executed in the following manners, and it always prints appropriate message(s) during execution. Please try the following one by one and test that it is working fine.
         ". /semDemo <file_name> <project_id> create <semnum>" creates a semaphore set of semnum semaphores against the key derived (by ftok()) from file_name and project_id. It prints appropriate message(s) during execution. Eg, ". /semDemo /home/manas/sem.txt 4 create 3" will create a key on the file /home/manas/sem.txt and project id 4; then it will a semaphore set having 3 semaphores on that key.
        "/semDemo <file_name> <project_id> set <semnum>  <sem_val>" sets sem_val to be  the value of the semnumth semaphore of the semaphore set identified by the key derived (by ftok()) from file_name and project_id. It prints appropriate message(s) during execution. 
        "./semDemo <file_name> <project_id> get <semnum>"  gets the value of the semnumth semaphore of the semaphore set identified by the key derived (by ftok()) from file_name and project_id. If semnum is not given, it prints the values of all the semaphores of the semaphore set.  It prints appropriate message(s) during execution. 
        "./semDemo <file_name> <project_id> inc <semnum>  val" increments (by val) the value of the semnumth semaphore of the semaphore set identified by the key derived (by ftok()) from file_name and project_id. It prints appropriate message(s) during execution.
        ". /semDemo <file_name> <project_id> dcr <semnum>  val" decrements (by val) the value of the semnumth semaphore of the semaphore set identified by the key derived (by ftok()) from file_name and project_id. It prints appropriate message(s) during execution.
        ". /semDemo <file_name> <project_id> rm"  destroys the semaphore set identified by the key derived (by ftok()) from file_name and project_id.  It prints appropriate message(s) during execution.
        ". /semDemo <file_name> <project_id> listp <semnum> prints the process id of all the processes waiting on the  semnumth semaphore of the semaphore set identified by the key derived (by ftok()) from file_name and project_id. If semnum is not given, it prints the same for all the semaphores of the semaphore set. It prints appropriate message(s) during execution.
    The program can be executed simultaneously from multiple terminals to demonstrate semaphiore properties.